Coord sys:
    -world coordinate system is defined like so: x increases to the right, y increases to the top
    -UI coordinate system is defined like so: (0,0) is top left, (screenWidth,screenHeight) is bottom right

        world:
            y
            ^
            |
            |-------> x

        UI:
          (0,0)
            |----------------|
            |                |
            |                |
            |                |
            |----------------|
                            (w,h)


    WORLD_SIDE_VIEW_2D !!! :
    -2d side-view camera defines visible world area, defined by 2d rectangle given in world space

        y
        ^      camera-rec 1
        |  |-----------------|
        |  |                 |
        |  |                 |
        |  |                 |
        |  |-----------------|
        |
        |      camera-rec 1
        |         |---------|
        |         |         |
        |         |---------|
        |
        |__________________________> x
        O
    (world space: O(0,0))

    -real screen has (screenWidth,screenHeight); (0,0) is top left, (screenWidth,screenHeight) is bottom right

        Camera can be rendered on screen like so:

        1)          |-----------------| screen == camera
                    |@@@@@@@@@@@@@@@@@|
                    |@@@@@@@@@@@@@@@@@|
                    |@@@@@@@@@@@@@@@@@|
                    |-----------------|

        2)          |------|----------| screen
              camera|@@@@@@|##########|
                    |------|##########|
                    |#################|
                    |-----------------|

              where @ is rendered world + possible ui on top of world render,
                    # any other data.

Code design:
    PixelGame class should not have any local code additions, i.e all logic, game code, particular rendering
    should occur beyond PixelGame class. It is a core class that defines all engine features that should be used
    by passing some events, callbacks, registering something to appropriate managers

World:
    world units must differ from rendering units, i.e pixel. Say world units are meters, we
    want the same amount of meters to be rendered on screen at any resolution. This way
    the actual scale of game world rendered does not depend on resolution of the screen.